define(["exports","./GeometryOffsetAttribute-03006e80","./Transforms-475655a6","./Cartesian2-08065eec","./ComponentDatatype-a867ddaa","./when-ad3237a0","./Check-be2d5acb","./GeometryAttribute-9b226476","./GeometryAttributes-27dc652d","./IndexDatatype-9504f550","./Math-5ca9b250"],function(i,O,D,I,z,L,e,R,S,N,F){"use strict";var d=new I.Cartesian3(1,1,1),B=Math.cos,U=Math.sin;function l(i){i=L.defaultValue(i,L.defaultValue.EMPTY_OBJECT);var e=L.defaultValue(i.radii,d),t=L.defaultValue(i.innerRadii,e),a=L.defaultValue(i.minimumClock,0),n=L.defaultValue(i.maximumClock,F.CesiumMath.TWO_PI),r=L.defaultValue(i.minimumCone,0),o=L.defaultValue(i.maximumCone,F.CesiumMath.PI),s=Math.round(L.defaultValue(i.stackPartitions,10)),u=Math.round(L.defaultValue(i.slicePartitions,8)),m=Math.round(L.defaultValue(i.subdivisions,128));this._radii=I.Cartesian3.clone(e),this._innerRadii=I.Cartesian3.clone(t),this._minimumClock=a,this._maximumClock=n,this._minimumCone=r,this._maximumCone=o,this._stackPartitions=s,this._slicePartitions=u,this._subdivisions=m,this._offsetAttribute=i.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry",i.id&&(this._convertToViewShedFrustum=L.defaultValue(i.id._convertToViewShedFrustum,!1))}l.packedLength=2*I.Cartesian3.packedLength+8,l.pack=function(i,e,t){return t=L.defaultValue(t,0),I.Cartesian3.pack(i._radii,e,t),t+=I.Cartesian3.packedLength,I.Cartesian3.pack(i._innerRadii,e,t),t+=I.Cartesian3.packedLength,e[t++]=i._minimumClock,e[t++]=i._maximumClock,e[t++]=i._minimumCone,e[t++]=i._maximumCone,e[t++]=i._stackPartitions,e[t++]=i._slicePartitions,e[t++]=i._subdivisions,e[t]=L.defaultValue(i._offsetAttribute,-1),e};var c=new I.Cartesian3,C=new I.Cartesian3,_={radii:c,innerRadii:C,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};l.unpack=function(i,e,t){e=L.defaultValue(e,0);var a=I.Cartesian3.unpack(i,e,c);e+=I.Cartesian3.packedLength;var n=I.Cartesian3.unpack(i,e,C);e+=I.Cartesian3.packedLength;var r=i[e++],o=i[e++],s=i[e++],u=i[e++],m=i[e++],d=i[e++],f=i[e++],e=i[e];return L.defined(t)?(t._radii=I.Cartesian3.clone(a,t._radii),t._innerRadii=I.Cartesian3.clone(n,t._innerRadii),t._minimumClock=r,t._maximumClock=o,t._minimumCone=s,t._maximumCone=u,t._stackPartitions=m,t._slicePartitions=d,t._subdivisions=f,t._offsetAttribute=-1===e?void 0:e,t):(_.minimumClock=r,_.maximumClock=o,_.minimumCone=s,_.maximumCone=u,_.stackPartitions=m,_.slicePartitions=d,_.subdivisions=f,_.offsetAttribute=-1===e?void 0:e,new l(_))},l.createGeometry=function(i){var e=i._radii;if(!(e.x<=0||e.y<=0||e.z<=0)){var t=i._innerRadii;if(!(t.x<=0||t.y<=0||t.z<=0)){var a=i._minimumClock,n=i._maximumClock,r=i._minimumCone,o=i._maximumCone,s=i._subdivisions,u=I.Ellipsoid.fromCartesian3(e),m=i._slicePartitions+1,d=i._stackPartitions+1;(m=Math.round(m*Math.abs(n-a)/F.CesiumMath.TWO_PI))<2&&(m=2),(d=Math.round(d*Math.abs(o-r)/F.CesiumMath.PI))<2&&(d=2);var f=0,l=1,c=t.x!==e.x||t.y!==e.y||t.z!==e.z,C=!1,_=!1;c&&(l=2,0<r&&(C=!0,f+=m),o<Math.PI&&(_=!0,f+=m));for(var h,p,v=s*l*(d+m),y=new Float64Array(3*v),k=N.IndexDatatype.createTypedArray(v,2*(v+f-(m+d)*l)),b=0,A=new Array(d),x=new Array(d),P=0;P<d;P++)A[P]=U(p=r+P*(o-r)/(d-1)),x[P]=B(p);var w=new Array(s),V=new Array(s);for(P=0;P<s;P++)w[P]=U(h=a+P*(n-a)/(s-1)),V[P]=B(h);for(P=0;P<d;P++)for(g=0;g<s;g++)y[b++]=e.x*A[P]*V[g],y[b++]=e.y*A[P]*w[g],y[b++]=e.z*x[P];if(c)for(P=0;P<d;P++)for(g=0;g<s;g++)y[b++]=t.x*A[P]*V[g],y[b++]=t.y*A[P]*w[g],y[b++]=t.z*x[P];for(A.length=s,x.length=s,P=0;P<s;P++)A[P]=U(p=r+P*(o-r)/(s-1)),x[P]=B(p);for(w.length=m,V.length=m,P=0;P<m;P++)w[P]=U(h=a+P*(n-a)/(m-1)),V[P]=B(h);for(P=0;P<s;P++)for(g=0;g<m;g++)y[b++]=e.x*A[P]*V[g],y[b++]=e.y*A[P]*w[g],y[b++]=e.z*x[P];if(c)for(P=0;P<s;P++)for(g=0;g<m;g++)y[b++]=t.x*A[P]*V[g],y[b++]=t.y*A[P]*w[g],y[b++]=t.z*x[P];for(P=b=0;P<d*l;P++)for(var M=P*s,g=0;g<s-1;g++)k[b++]=M+g,k[b++]=M+g+1;var G=d*s*l;for(P=0;P<m;P++)for(g=0;g<s-1;g++)k[b++]=G+P+g*m,k[b++]=G+P+(g+1)*m;if(c)for(G=d*s*l+m*s,P=0;P<m;P++)for(g=0;g<s-1;g++)k[b++]=G+P+g*m,k[b++]=G+P+(g+1)*m;if(c){var T=d*s*l,E=T+s*m;if(i._convertToViewShedFrustum)C&&(k[b++]=T,k[b++]=E,k[b++]=T+m-1,k[b++]=E+m-1),_&&(E+=s*m-m,k[b++]=T+=s*m-m,k[b++]=E,k[b++]=T+m-1,k[b++]=E+m-1);else{if(C)for(P=0;P<m;P++)k[b++]=T+P,k[b++]=E+P;if(_)for(T+=s*m-m,E+=s*m-m,P=0;P<m;P++)k[b++]=T+P,k[b++]=E+P}}c=new S.GeometryAttributes({position:new R.GeometryAttribute({componentDatatype:z.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:y})});return L.defined(i._offsetAttribute)&&(C=y.length,_=new Uint8Array(C/3),C=i._offsetAttribute===O.GeometryOffsetAttribute.NONE?0:1,O.arrayFill(_,C),c.applyOffset=new R.GeometryAttribute({componentDatatype:z.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:_})),new R.Geometry({attributes:c,indices:k,primitiveType:R.PrimitiveType.LINES,boundingSphere:D.BoundingSphere.fromEllipsoid(u),offsetAttribute:i._offsetAttribute})}}},i.EllipsoidOutlineGeometry=l});
